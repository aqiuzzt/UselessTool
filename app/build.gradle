apply plugin: 'com.android.application'
apply plugin: 'uselessPlugin'

uselessPluginExtension {
    injectPackagesKey 'com.example.zack', 'com.test.lib'
    disinjectClassSuffix 'Bean', 'Util', 'Utils'
    logTag = "UselessLog"
    injectEnable true
}

checkMethodUsedExtension {
    mappingFilePath = project.buildDir.getAbsolutePath() + "/outputs/mapping/release/mapping.txt"
    outFilePath = rootProject.rootDir.getAbsolutePath() + "/NotUsedMethod.txt"
}

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'
    defaultConfig {
        applicationId "com.example.zack.plugintest"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            def dirs = ['main', 'p_projectone']
            dirs.each { dir ->
                java.srcDir("src/$dir/java")
                res.srcDir("src/$dir/res")
                //manifest.srcFile "src/$dir/AndroidManifest.xml"
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile project (":testlib")
}

task testTask1 {
    println "ddddddddddddddddddddddd body"
}

